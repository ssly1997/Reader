<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">11.6 使用BNRImageStore</h2>

  <p class="calibre1">　　当Homepwner需要显示BNRDetailViewController对象的视图时（见图11-11），该对象需要通过当前选中的BNRItem对象的itemKey属性，从BNRImageStore对象得到相应的照片，然后将该照片放置在UIImageView对象上。</p>

  <p class="calibre7"><img alt="tu11-11" src="../Images/image00525.jpeg" class="calibre8"/></p>

  <p class="calibre7">图11-11 缓存</p>

  <p class="calibre1">　　Homepwner会在两种情况下显示BNRDetailViewController对象的视图：①当用户选中BNRItemsViewController对象的UITableView对象的某行时。②当用户关闭UIImagePickerController对象时。无论哪种情况，BNRDetailViewController对象都应该在UIImageView对象上显示当前选中的BNRItem对象的照片。将以下代码加入BNRDetailViewController.m中的viewWillAppear:。</p>

  <p class="calibre1">　　- （void）viewWillAppear:（BOOL）animated</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　[super viewWillAppear:animated];</p>

  <p class="calibre1">　　self.nameField.text = item.itemName;</p>

  <p class="calibre1">　　self.serialNumberField.text = item.serialNumber;</p>

  <p class="calibre1">　　self.valueField.text = [NSString stringWithFormat:@“%d”,</p>

  <p class="calibre1">　　item.valueInDollars];</p>

  <p class="calibre1">　　static NSDateFormatter *dateFormatter = nil;</p>

  <p class="calibre1">　　if （！dateFormatter） {</p>

  <p class="calibre1">　　dateFormatter = [[NSDateFormatter alloc] init];</p>

  <p class="calibre1">　　dateFormatter.dateStyle = NSDateFormatterMediumStyle;</p>

  <p class="calibre1">　　dateFormatter.timeStyle = NSDateFormatterNoStyle;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　self.dateLabel.text = [dateFormatter stringFromDate:item.dateCreated];</p>

  <p class="calibre1"><span class="calibre10">　　NSString *itemKey = self.item.itemKey;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 根据itemKey，从BNRImageStore对象获取照片</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIImage *imageToDisplay =</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[[BNRImageStore sharedStore] imageForKey:itemKey];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 将得到的照片赋给UIImageView对象</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.imageView.image = imageToDisplay;</span><br class="calibre2"/></p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　如果针对指定的键，BNRImageStore对象没有包含相应的照片（或者选中的BNRItem对象的itemKey属性是nil），那么UIImageView对象的对象变量image的值会是nil。当image属性是nil时，UIImageView对象不会有任何显示。</p>

  <p class="calibre1">　　构建并运行应用，添加一个新的BNRItem对象，然后进入其详细界面。点击工具栏上的相机按钮，为该对象拍摄一张照片，Homepwner应该能正确地显示拍摄的照片。</p>

  <p class="calibre1"><br class="calibre2"/></p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
