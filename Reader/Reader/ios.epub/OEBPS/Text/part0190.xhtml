<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">21.2 UIWebView</h2>

  <p class="calibre1">　　之前介绍过，课程的详细信息是一个NSDictionary对象，其中含有“url”键，值是一个URL字符串，表示对应的课程网址。下面要让用户在选中某项在线课程后，可以浏览该课程的网页。读者可能会想到让Nerdfeed启动Safari浏览器，但是如果用户在查看了网页之后需要继续使用Nerdfeed，就必须再从Safari浏览器切换回Nerdfeed。其实还有更好的解决方案——Apple提供了UIWebView，可以不用切换至Safari就能在应用内直接打开网页。</p>

  <p class="calibre1">　　UIWebView对象可以显示指定的网页内容。实际上，iOS设备和模拟器中的Safari浏览器也是通过UIWebView对象来显示网页内容的。本节将创建一个新的视图控制器，它的view是一个UIWebView对象。当用户在UITableView对象中选中某项在线课程时，Nerdfeed要将这个视图控制器压入UINavigationController栈，然后要求UIWebView对象载入相应的课程网页。</p>

  <p class="calibre1">　　创建一个新的NSObject子类并将其命名为BNRWebViewController。在BNRWebViewController.h中声明一个新属性URL，然后将BNRWebViewController的父类改为UIViewController，代码如下：</p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">@interface BNRWebViewController : NSObject</span></del></p>

  <p class="calibre1"><span class="calibre10">　　@interface BNRWebViewController : UIViewController</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　@property （nonatomic） NSURL *URL;</span><br class="calibre2"/></p>

  <p class="calibre1">　　@end</p>

  <p class="calibre1">　　在BNRWebViewController.m中，加入以下代码：</p>

  <p class="calibre1">　　@implementation BNRWebViewController</p>

  <p class="calibre1"><span class="calibre10">　　- （void）loadView</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIWebView *webView = [[UIWebView alloc] init];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　webView.scalesPageToFit = YES;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.view = webView;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　- （void）setURL:（NSURL *）URL</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　_URL = URL;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　if （_URL） {</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSURLRequest *req = [NSURLRequest requestWithURL:_URL];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[（UIWebView *）self.view loadRequest:req];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1">　　@end</p>

  <p class="calibre1">　　在BNRCoursesViewController.h中，声明一个新属性，指向<span class="calibre10">BNRWebViewController</span>对象。代码如下：</p>

  <p class="calibre1"><span class="calibre10">　　@class BNRWebViewController;</span><br class="calibre2"/></p>

  <p class="calibre1">　　@interface BNRCoursesViewController : UITableViewController</p>

  <p class="calibre1"><span class="calibre10">　　@property （nonatomic） BNRWebViewController *webViewController;</span><br class="calibre2"/></p>

  <p class="calibre1">　　@end</p>

  <p class="calibre1">　　在BNRAppDelegate.m中，导入BNRWebViewController.h，创建BNRWebView- Controller对象并将其赋给BNRCoursesViewController对象的webViewController属性。代码如下：</p>

  <p class="calibre1"><span class="calibre10">　　#import “BNRWebViewController.h”</span><br class="calibre2"/></p>

  <p class="calibre1">　　@implementation BNRAppDelegate</p>

  <p class="calibre1">　　- （BOOL）application:（UIApplication *）application</p>

  <p class="calibre1">　　didFinishLaunchingWithOptions:（NSDictionary *）launchOptions</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　self.window =</p>

  <p class="calibre1">　　[[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];</p>

  <p class="calibre1">　　BNRCoursesViewController *cvc = [[BNRCoursesViewController alloc]</p>

  <p class="calibre1">　　initWithStyle:UITableViewStylePlain];</p>

  <p class="calibre1">　　UINavigationController *masterNav =</p>

  <p class="calibre1">　　[[UINavigationController alloc] initWithRootViewController:cvc];</p>

  <p class="calibre1"><span class="calibre10">　　BNRWebViewController *wvc = [[BNRWebViewController alloc] init];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　cvc.webViewController = wvc;</span><br class="calibre2"/></p>

  <p class="calibre1">　　self.window.rootViewController = masterNav;</p>

  <p class="calibre1">　　self.window.backgroundColor = [UIColor whiteColor];</p>

  <p class="calibre1">　　[self.window makeKeyAndVisible];</p>

  <p class="calibre1">　　return YES;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　（注意，之前的项目都是由UINavigationController对象的当前视图控制器负责创建下一个需要入栈的视图控制对象。而本章的Nerdfeed则是由BNRAppDelegate创建BNRWebViewController对象。这样做的目的是为第22章做准备：第22章的Nerdfeed在iPad中将改用UISplitViewController显示视图控制对象。）</p>

  <p class="calibre1">　　在BNRCoursesViewController.m中，导入BNRWebViewController.h，然后实现tableView:didSelectRowAtIndexPath:。当用户点击UITableView对象中的某个UITableViewCell后，Nerdfeed会创建BNRWebViewController对象并将其压入UINavigationController栈。代码如下：</p>

  <p class="calibre1"><span class="calibre10">　　#import “BNRWebViewController.h”</span><br class="calibre2"/></p>

  <p class="calibre1">　　@implementation BNRCoursesViewController</p>

  <p class="calibre1"><span class="calibre10">　　- （void）tableView:（UITableView *）tableView</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　didSelectRowAtIndexPath:（NSIndexPath *）indexPath</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSDictionary *course = self.courses[indexPath.row];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSURL *URL = [NSURL URLWithString:course[@“url”]];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.webViewController.title = course[@“title”];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.webViewController.URL = URL;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self.navigationController pushViewController:self.webViewController</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　animated:YES];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1">　　构建并运行应用。点击UITableView对象中的某项在线课程，Nerdfeed应该会打开新的视图控制器并显示相应课程的网页。</p>

  <p class="calibre1"><br class="calibre2"/></p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
