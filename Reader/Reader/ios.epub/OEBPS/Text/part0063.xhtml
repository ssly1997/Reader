<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">7.1 文本框（UITextField）</h2>

  <p class="calibre1">　　首先打开第6章创建的HypnoNerd应用。</p>

  <p class="calibre1">　　之前介绍过<span class="calibre10">UILabel</span>，它可以用来在界面中显示文本，但是用户无法选择或编辑<span class="calibre10">UILabel</span>中的文本。相反，<span class="calibre10">UITextField</span>可以接受用户输入的文本，例如在登录界面中，如果需要让用户输入用户名和密码，就可以使用<span class="calibre10">UITextField</span>。</p>

  <p class="calibre1">　　打开BNRHypnosisViewController.m，修改<span class="calibre10">loadView</span>方法，向view中添加一个<span class="calibre10">UITextField</span>对象：</p>

  <p class="calibre1">　　- (void)loadView</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　CGRect frame = [UIScreen mainScreen].bounds;</p>

  <p class="calibre1">　　BNRHypnosisView *backgroundView =</p>

  <p class="calibre1">　　[[BNRHypnosisView alloc] initWithFrame:frame];</p>

  <p class="calibre1"><span class="calibre10">　　CGRect textFieldRect = CGRectMake(40, 70, 240, 30);</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UITextField *textField = [[UITextField alloc] initWithFrame:textFieldRect];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 设置UITextField对象的边框样式，便于查看它在屏幕上的位置</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　textField.borderStyle = UITextBorderStyleRoundedRect;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[backgroundView addSubview:textField];</span><br class="calibre2"/></p>

  <p class="calibre1">　　self.view = backgroundView;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　构建并运行应用，Hypnotize标签页会显示一个文本框，该文本框就是刚才添加的<span class="calibre10">UITextField</span>对象。点击文本框，这时屏幕底部会弹出键盘，用于向文本框中输入文字。为了理解<span class="calibre10">UITextField</span>对象对点击事件的响应过程，下面需要介绍第一响应者（first responder）的概念。</p>

  <p class="calibre1">　　</p>

  <h3 class="sigil_not_in_toc">UIResponder</h3>

  <p class="calibre1">　　<span class="calibre10">UIResponder</span>是UIKit框架中的一个抽象类。之前章节介绍过它的几个子类：</p>

  <p class="calibre1"><span class="calibre10">　　•　</span><span class="calibre10">UIView</span></p>

  <p class="calibre1"><span class="calibre10">　　•　UIViewController</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　•　UIApplication</span><br class="calibre2"/></p>

  <p class="calibre1">　　<span class="calibre10">UIResponder</span>定义了一系列方法，用于接收和处理用户事件，例如触摸事件、运动事件（如摇晃设备）和功能控制事件（如编辑文本或播放音乐）等。<span class="calibre10">UIResponder</span>的子类会覆盖这些方法，实现自己的事件响应代码。</p>

  <p class="calibre1">　　在以上事件中，触摸事件显然应该由被触摸的视图负责处理。系统会将触摸事件直接发送给被触摸的视图，第5章介绍过触摸事件的处理方法。</p>

  <p class="calibre1">　　其他类型的事件则会由第一响应者负责处理，<span class="calibre10">UIWindow</span>有一个firstResponder属性指向第一响应者。例如，当用户点击<span class="calibre10">UITextfield</span>对象时，<span class="calibre10">UITextfield</span>对象就会成为第一响应者。<span class="calibre10">UIWindow</span>会将firstResponder指向该对象，之后，如果应用接收到运动事件和功能控制事件，都会发送给<span class="calibre10">UITextfield</span>对象（见图7-2）。</p>

  <p class="calibre7"><img alt="tu7-2" src="../Images/image00464.jpeg" class="calibre8"/></p>

  <p class="calibre7">图7-2 第一响应者</p>

  <p class="calibre1">　　当某个<span class="calibre10">UITextField</span>对象或<span class="calibre10">UITextView</span>对象成为第一响应者时，屏幕会弹出键盘。除了用户点击之外，还可以在代码中向<span class="calibre10">UITextField</span>对象发送<span class="calibre10">becomeFirstResponder</span>消息，使其成为第一响应者。相反，如果要关闭键盘，则可以向<span class="calibre10">UITextField</span>对象发送<span class="calibre10">resignFirstResponder</span>消息，且要求该对象放弃第一响应者状态。一旦第一响应者不是<span class="calibre10">UITextField</span>对象，键盘就会消失。</p>

  <p class="calibre1">　　实际上，大部分视图都不需要成为第一响应者。例如<span class="calibre10">UISlider</span>对象，该对象只处理触摸事件（用户拖曳滑块），而不会接受其他类型的事件，因此它不需要成为第一响应者。</p>

  <p class="calibre1"><br class="calibre2"/></p>

  <h3 class="sigil_not_in_toc">设置UITextField的键盘</h3>

  <p class="calibre1">　　<span class="calibre10">UITextField</span>对象有一系列属性，用于设置弹出的键盘。下面就修改这些属性，为<span class="calibre10">UITextField</span>对象添加占位符文本，并修改键盘的换行键类型。</p>

  <p class="calibre1">　　- (void)loadView</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　CGRect frame = [UIScreen mainScreen].bounds;</p>

  <p class="calibre1">　　BNRHypnosisView *backgroundView =</p>

  <p class="calibre1">　　[[BNRHypnosisView alloc] initWithFrame:frame];</p>

  <p class="calibre1">　　CGRect textFieldRect = CGRectMake(40, 70, 240, 30);</p>

  <p class="calibre1">　　UITextField *textField = [[UITextField alloc] initWithFrame:textFieldRect];</p>

  <p class="calibre1">　　// 设置UITextField对象的边框样式，便于查看它在屏幕上的位置</p>

  <p class="calibre1">　　textField.borderStyle = UITextBorderStyleRoundedRect;</p>

  <p class="calibre1"><span class="calibre10">　　textField.placeholder = @"Hypnotize me";</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　textField.returnKeyType = UIReturnKeyDone;</span><br class="calibre2"/></p>

  <p class="calibre1">　　[backgroundView addSubview:textField];</p>

  <p class="calibre1">　　self.view = backgroundView;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　构建并运行应用，现在<span class="calibre10">UITextField</span>对象中有一行占位符文本Hypnotize me，当用户在<span class="calibre10">UITextField</span>对象中输入文字时，占位符文本就会消失。同时，换行键不再显示默认的Return，而是Done（见图7-3）。</p>

  <p class="calibre7"><img alt="tu7-3" src="../Images/image00465.jpeg" class="calibre8"/></p>

  <p class="calibre7">图7-3 UIReturnKeyDone类型的键盘</p>

  <p class="calibre1">　　但是，如果读者点击Done键，会发现应用没有任何反应。实际上，修改换行键的类型只是改变了换行键的外观，如果需要实现用户点击换行键后的功能，必须编写相应代码。在编写代码之前，再介绍<span class="calibre10">UITextField</span>对象中另外几个有用的属性：</p>

  <p class="calibre7"><img alt="biao7" src="../Images/image00466.jpeg" class="calibre8"/></p>

  <p class="calibre7"><img alt="biao7-1" src="../Images/image00467.jpeg" class="calibre8"/></p>

  <p class="calibre1"><br class="calibre2"/></p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
