<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">16.6 深入学习：NSAutoresizingMaskLayoutConstraint</h2>

  <p class="calibre1">　　在Apple引入自动布局系统之前，iOS应用一直使用自动缩放掩码管理视图布局，视图只具有相对于父视图的自动缩放掩码，无法设置与兄弟视图之间的布局关系。</p>

  <p class="calibre1">　　默认情况下，视图会将自动缩放掩码转换为对应的约束，这类约束经常会与手动添加的约束产生冲突，下面就演示这类冲突。</p>

  <p class="calibre1">　　在<span class="calibre10">viewDidLoad</span>中，注释掉禁用转换自动缩放掩码的代码：</p>

  <p class="calibre1">　　// 设置UIImageView对象的内容缩放模式</p>

  <p class="calibre1">　　iv.contentMode = UIViewContentModeScaleAspectFit;</p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">// 告诉自动布局系统不要将自动缩放掩码转换为约束</span></del></p>

  <p class="calibre1"><span class="calibre10">　　// iv.translatesAutoresizingMaskIntoConstraints = NO;</span><br class="calibre2"/></p>

  <p class="calibre1">　　// 将UIImageView对象添加到view上</p>

  <p class="calibre1">　　[self.view addSubview:iv];</p>

  <p class="calibre1">　　现在<span class="calibre10">UIImageView</span>对象会将自动缩放掩码转换为约束。构建并运行应用，然后进入详细界面。这时控制台会输出布局问题和解决建议。</p>

  <p class="calibre1">　　Unable to simultaneously satisfy constraints.</p>

  <p class="calibre1">　　Probably at least one of the constraints in the following list is one you don't</p>

  <p class="calibre1">　　want. Try this: （1） look at each constraint and try to figure out which you don't</p>

  <p class="calibre1">　　expect; （2） find the code that added the unwanted constraint or constraints and</p>

  <p class="calibre1">　　fix it. （Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property</p>

  <p class="calibre1">　　translatesAutoresizingMaskIntoConstraints）</p>

  <p class="calibre1">　　（</p>

  <p class="calibre1">　　“”,</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x9153ee0</p>

  <p class="calibre1">　　H:|-（20）-[UILabel:0x9149f00] （Names: '|':UIControl:0x91496e0 ）&gt;”,</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x9153fa0</p>

  <p class="calibre1">　　UILabel:0x9149970.leading == UILabel:0x9149f00.leading&gt;”,</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x91540c0</p>

  <p class="calibre1">　　UILabel:0x914a1e0.leading == UILabel:0x9149970.leading&gt;”,</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x9154420</p>

  <p class="calibre1">　　H:[UITextField:0x914fe20]-（20）-|</p>

  <p class="calibre1">　　（Names: '|':UIControl:0x91496e0 ）&gt;”,</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x9154450</p>

  <p class="calibre1">　　H:[UILabel:0x914a1e0]-（12）-[UITextField:0x914fe20]&gt;”,</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x912f5a0 （Names: '|':UIControl:0x91496e0 ）&gt;”,</p>

  <p class="calibre1">　　H:|-（NSSpace（20））-[UIImageView:0x91524d0</p>

  <p class="calibre1">　　“&lt;NSLayoutConstraint:0x91452a0 （Names: '|':UIControl:0x91496e0 ）&gt;”,</p>

  <p class="calibre1">　　H:[UIImageView:0x91524d0]-（NSSpace（20））-|</p>

  <p class="calibre1">　　“&lt;NSAutoresizingMaskLayoutConstraint:0x905f130</p>

  <p class="calibre1">　　h=--&amp; v=--&amp; UIImageView:0x91524d0.midX ==&gt;”</p>

  <p class="calibre1">　　）</p>

  <p class="calibre1">　　Will attempt to recover by breaking constraint</p>

  <p class="calibre1">　　&lt;NSLayoutConstraint:0x914a2e0 H:[UILabel:0x914a1e0（42）]&gt;</p>

  <p class="calibre1">　　第15章介绍过，以上输出表明多个约束之间发生了冲突，Xcode无法同时满足所有约束。其中，与问题相关的所有约束都会以固定格式依次列举出来，例如，</p>

  <p class="calibre1">　　&lt;NSLayoutConstraint:0x9153fa0</p>

  <p class="calibre1">　　UILabel:0x9149970.leading == UILabel:0x9149f00.leading&gt;</p>

  <p class="calibre1">　　以上格式首先是约束对象的类名和内存地址，然后是约束的作用，在本例中，位于0x9153fa0的约束限定0x9153fa0和0x9149970两个<span class="calibre10">UILabel</span>对象左对齐。</p>

  <p class="calibre1">　　可以注意到，按照以上格式，除最后一个约束外，其余约束的类名都是<span class="calibre10">NSLayoutConstraint</span>。最后一个约束是由<span class="calibre10">UIImageView</span>对象的自动缩放掩码转换而来的，所以类名是<span class="calibre10">NSAutoresizingMaskLayoutConstraint</span>。</p>

  <p class="calibre1">　　最后是Xcode所忽略的约束。可以看到，Xcode忽略的是之前手动为<span class="calibre10">UILabel</span>对象添加的宽度约束，而不是<span class="calibre10">NSAutoresizingMaskLayoutConstraint</span>对象，所以导致界面布局与期望不同。</p>

  <p class="calibre1">　　现在读者可以理解设置translatesAutoresizingMaskIntoConstraints属性为NO的原因了，其作用就是避免自动布局系统生成与其他约束产生冲突的<span class="calibre10">NSAutoresizingMask- LayoutConstraint</span>对象。</p>

  <p class="calibre1">　　最后请读者恢复<span class="calibre10">viewDidLoad</span>中的代码：</p>

  <p class="calibre1">　　// 设置UIImageView对象的内容缩放模式</p>

  <p class="calibre1">　　iv.contentMode = UIViewContentModeScaleAspectFit;</p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">// 告诉自动布局系统不要将自动缩放掩码转换为约束</span></del></p>

  <p class="calibre1"><span class="calibre10">　　iv.translatesAutoresizingMaskIntoConstraints = NO;</span><br class="calibre2"/></p>

  <p class="calibre1">　　// 将UIImageView对象添加到view上</p>

  <p class="calibre1">　　[self.view addSubview:iv];</p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
