<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">5.3 使用UIScrollView</h2>

  <p class="calibre1">　　本节将为Hypnosister应用添加一个UIScrollView对象，使其成为应用窗口的子视图，然后再将BNRHypnosisView作为子视图加入UIScrollView对象（见图5-2）。</p>

  <p class="calibre7"><img alt="tu5-2" src="../Images/image00439.jpeg" class="calibre8"/></p>

  <p class="calibre7">图5-2 加入UIScrollView之后的视图层次结构</p>

  <p class="calibre1">　　通常情况下，UIScrollView对象适用于那些尺寸大于屏幕的视图。当某个视图是UIScrollView对象的子视图时，该对象会画出该视图的某块区域（形状为矩形）。当用户按住这块矩形区域并移动手指（即拖动，pan）时，UIScrollView对象会改变该矩形所显示的子视图区域。读者可以将UIScrollView对象看成是镜头，而其子视图是拍摄的景观。这里移动的是“镜头”，而不是“景观”（见图5-3）。UIScrollView对象的尺寸就是这个“镜头”的尺寸，而其能够拍摄的范围是由其属性contentSize决定的。通常情况下，contentSize的数值就是子视图的尺寸。</p>

  <p class="calibre1">　　UIScrollView是UIView的子类，同样可以使用initWithFrame:消息初始化，还可以将其作为子视图添加到其他视图中。</p>

  <p class="calibre7"><img alt="tu5-3" src="../Images/image00440.jpeg" class="calibre8"/></p>

  <p class="calibre7">图5-3 UIScrollView对象及其contentSize</p>

  <p class="calibre1">　　在BNRAppDelegate.m中，创建一个有着超大尺寸的BNRHypnosisView对象并将其加入一个UIScrollView对象，然后将这个UIScrollView对象加入窗口，代码如下：</p>

  <p class="calibre1">　　- (BOOL)application:(UIApplication *)application</p>

  <p class="calibre1">　　didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　self.window = [[UIWindow alloc] initWithFrame:</p>

  <p class="calibre1">　　　　　　　　[[UIScreen mainScreen] bounds]];</p>

  <p class="calibre1">　　// 在这里添加应用启动后的初始化代码</p>

  <p class="calibre1">　　 <del class="calibre11"><span class="calibre10">CGRect firstFrame = self.window.bounds;</span></del></p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">BNRHypnosisView *firstView = [[BNRHypnosisView alloc]</span></del></p>

  <p class="calibre1">   <del class="calibre11"><span class="calibre10">initWithFrame:firstFrame];</span></del></p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">[self.window addSubview:firstView];</span></del></p>

  <p class="calibre1"><span class="calibre10">　　// 创建两个CGRect结构分别作为UIScrollView对象和BNRHypnosisView对象的frame</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　CGRect screenRect = self.window.bounds;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　CGRect bigRect = screenRect;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　bigRect.size.width *= 2.0;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　bigRect.size.height *= 2.0;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 创建一个UIScrollView对象，将其尺寸设置为窗口大小</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:screenRect];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self.window addSubview:scrollView];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 创建一个有着超大尺寸的BNRHypnosisView对象并将其加入UIScrollView对象</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　BNRHypnosisView *hypnosisView = [[BNRHypnosisView alloc]</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　　　　　　　　　　　　　　　　　initWithFrame:bigRect];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[scrollView addSubview:hypnosisView];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 告诉UIScrollView对象"取景"范围有多大</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　scrollView.contentSize = bigRect.size;</span><br class="calibre2"/></p>

  <p class="calibre1">　　self.window.backgroundColor = [UIColor whiteColor];</p>

  <p class="calibre1">　　构建并运行应用，可以上、下、左、右拖动来查看超大尺寸的BNRHypnosisView对象的其余部分（见图5-4）。</p>

  <p class="calibre7"><img alt="tu5-4" src="../Images/image00441.jpeg" class="calibre8"/></p>

  <p class="calibre7">图5-4 BNRHypnosisView的右上角</p>

  <p class="calibre1">　　移动BNRHypnosisView对象的同时，圆形的颜色也会发生变化。这是由于移动视图时也会产生触摸事件，因此运行循环会将触摸事件发送给UIScrollView和BNRHypnosisView。第13章会介绍如何检测和处理“tap（点击）”手势，用来区别触摸手势和移动手势。</p>

  <p class="calibre1">　　使用UIScrollView还可以实现“Pinch-to-zoom（捏合缩放）”功能。虽然只需要添加几行代码就可以实现该功能，但是这些代码涉及第7章中的技术。为Hypnosister添加捏合缩放功能是第7章的练习。</p>

  <p class="calibre1"><br class="calibre2"/></p>

  <h3 class="sigil_not_in_toc">拖动与分页</h3>

  <p class="calibre1">　　UIScrollView对象还可以滑动显示所有加入UIScrollView对象的子视图。</p>

  <p class="calibre1">　　在BNRAppDelegate.m中，将BNRHypnosisView对象的尺寸改回与屏幕的尺寸相同，然后再创建一个BNRHypnosisView对象，将其尺寸也设置为与屏幕的尺寸相同并加入UIScrollView对象。此外，还要将UIScrollView对象的contentSize的宽度设置为屏幕宽度的2倍，高度不变，代码如下：</p>

  <p class="calibre1">　　// 创建两个CGRect结构分别作为UIScrollView对象和BNRHypnosisView对象的frame</p>

  <p class="calibre1">　　CGRect screenRect = self.window.bounds;</p>

  <p class="calibre1">　　CGRect bigRect = screenRect;</p>

  <p class="calibre1">　　bigRect.size.width *= 2.0;</p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">bigRect.size.height *= 2.0;</span></del></p>

  <p class="calibre1">　　// 创建一个UIScrollView对象，将其尺寸设置为窗口大小</p>

  <p class="calibre1">　　UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:screenRect];</p>

  <p class="calibre1">　　[self.window addSubview:scrollView];</p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">// 创建一个有着超大尺寸的BNRHypnosisView对象并将其加入UIScrollView对象</span></del></p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">BNRHypnosisView *hypnosisView = [[BNRHypnosisView alloc]</span></del></p>

  <p class="calibre1">　　　　　　　　　　　　　　　　　　<del class="calibre11"><span class="calibre10">initWithFrame:bigRect];</span></del></p>

  <p class="calibre1"><span class="calibre10">　　// 创建一个大小与屏幕相同的BNRHypnosisView对象并将其加入UIScrollView对象</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　BNRHypnosisView *hypnosisView = [[BNRHypnosisView alloc]</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　　　　　　　　　　　　　　　　　initWithFrame:screenRect];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[scrollView addSubview:hypnosisView];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 创建第二个大小与屏幕相同的BNRHypnosisView对象并放置在第一个BNRHypnosisView</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 对象的右侧，使其刚好移出屏幕外</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　screenRect.origin.x += screenRect.size.width;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　BNRHypnosisView *anotherView = [[BNRHypnosisView alloc] </span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　initWithFrame:screenRect];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[scrollView addSubview:anotherView];</span><br class="calibre2"/></p>

  <p class="calibre1">　　// 告诉UIScrollView对象"取景"范围有多大</p>

  <p class="calibre1">　　scrollView.contentSize = bigRect.size;</p>

  <p class="calibre1">　　构建并运行应用，按从左向右的方向拖动屏幕，应该能先后看到两个BNRHypnosisView对象。请注意，UIScrollView对象有可能同时显示两个BNRHypnosisView对象的部分区域，即两个BNRHypnosisView对象的连接部分（见图5-5）。</p>

  <p class="calibre7"><img alt="tu5-5" src="../Images/image00442.jpeg" class="calibre8"/></p>

  <p class="calibre7">图5-5 UIScrollView显示两个BNRHypnosisView的连接部分</p>

  <p class="calibre1">　　某些情况下，这种行为是符合预期的。但是有时也要让UIScrollView对象的“镜头”的边和其显示的某个视图的边对齐。为此，要将UIScrollView对象的pagingEnabled设置为YES。在BNRAppDelegate.m中将scrollView的pagingEnabled设置为YES，代码如下：</p>

  <p class="calibre1">　　UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:screenRect];</p>

  <p class="calibre1"><span class="calibre10">　　[scrollView setPagingEnabled:YES];</span><br class="calibre2"/></p>

  <p class="calibre1">　　[[self window] addSubview:scrollView];</p>

  <p class="calibre1">　　构建并运行应用，拖动屏幕直到能看到两个BNRHypnosisView对象的连接部分，然后松开手指。UIScrollView对象应该会自动将“镜头”切换到其中一个BNRHypnosisView对象上。UIScrollView对象的分页实现原理是：UIScrollView对象会根据其bounds的尺寸，将contentSize分割为尺寸相同的多个区域。拖动结束后，UIScrollView实例会自动滚动并只显示其中的一个区域。</p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
