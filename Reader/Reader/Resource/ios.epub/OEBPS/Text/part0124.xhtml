<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">13.5 UILongPressGestureRecognizer</h2>

  <p class="calibre1">　　下面介绍另外两个<span class="calibre10">UIGestureRecognizer</span>子类：<span class="calibre10">UILongPressGestureRecognizer</span>和<span class="calibre10">UIPanGestureRecognizer</span>。当用户按住某根线条（长按）不放时，TouchTracker应该选中该线条。如果某根线条通过上述手势选中，就应该允许用户拖移（pan）这根线条至新位置。</p>

  <p class="calibre1">　　本节先介绍<span class="calibre10">UILongPressGestureRecognizer</span>。在BNRDrawView.m的<span class="calibre10">initWithFrame:</span>中先创建一个<span class="calibre10">UILongPressGestureRecognizer</span>对象，然后将该对象附着在<span class="calibre10">BNRDrawView</span>对象上，代码如下：</p>

  <p class="calibre1">　　[self addGestureRecognizer:tapRecognizer];</p>

  <p class="calibre1"><span class="calibre10">　　UILongPressGestureRecognizer *pressRecognizer</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　= [[UILongPressGestureRecognizer alloc]</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　initWithTarget:self action:@selector（longPress:）];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self addGestureRecognizer:pressRecognizer];</span><br class="calibre2"/></p>

  <p class="calibre1">　　当用户按住BNRDrawView对象不放时，附着在该对象上的<span class="calibre10">UILongPressGesture- Recognizer</span>对象就会向其发送<span class="calibre10">longPress:</span>消息。<span class="calibre10">UILongPressGestureRecognizer</span>对象默认会将持续时间超过0.5秒的触摸事件识别为长按手势。设置<span class="calibre10">UILongPressGesture- Recognizer</span>对象的minimumPressDuration属性可以修改这个时间。</p>

  <p class="calibre1">　　“点击屏幕”是一种简单的手势，只有一个事件。<span class="calibre10">UITapGestureRecognizer</span>对象一旦识别出按下手势，就会触发按下事件并结束该手势的识别过程。“长按屏幕”则不同，<span class="calibre10">UILongPressGestureRecognizer</span>对象在识别出长按手势后，会持续跟踪该手势并在不同的阶段分别触发三种不同的事件。</p>

  <p class="calibre1">　　例如，当用户触摸某个UIView对象后，<span class="calibre10">UILongPressGestureRecognizer</span>对象会将这个触摸事件识别为“可能会发生”的长按手势。为了能够准确地识别长按手势，<span class="calibre10">UILongPressGestureRecognizer</span>对象必须等待后续事件，根据触摸时间做下一步的判断。</p>

  <p class="calibre1">　　当触摸的时间足够长时，UILongPressGestureRecognizer对象就会将其识别为长按手势并触发“长按开始”事件。当用户的手指离开屏幕时，该对象会触发“长按结束”事件。</p>

  <p class="calibre1">　　当某个<span class="calibre10">UIGestureRecognizer</span>子类对象触发特定的事件后，其state属性会发生变化。以<span class="calibre10">UILongPressGestureRecognizer</span>对象为例，和上述三种事件相对应的state属性分别为：UIGestureRecognizerStatePossible、UIGestureRecognizerStateBegan和UIGestureRecognizerStateEnded。</p>

  <p class="calibre1">　　当某个<span class="calibre10">UIGestureRecognizer</span>子类对象的state属性发生变化时（除了切换至<span class="calibre10">UIGestureRecognizerStatePossible</span>的情况），该对象就会向其目标对象发送指定的动作消息。所以当某个长按手势开始和结束时，相应的<span class="calibre10">UILongPressGestureRecognizer</span>对象都会向其目标对象发送同一个消息。和该消息匹配的方法可以通过<span class="calibre10">UIGestureRecognizer</span>对象的state属性来判断当前的事件类型，然后根据不同的事件类型执行不同的代码。</p>

  <p class="calibre1">　　<span class="calibre10">longPress:</span>的实现逻辑为：当<span class="calibre10">BNRDrawView</span>对象收到<span class="calibre10">longPress:</span>时，如果事件类型是“开始”，就应该根据手势发生时的位置选中距离最近的那根线条。这样用户就可以通过长按屏幕选中某根线条。如果事件类型是“结束”，就应该取消当前选中的线条。</p>

  <p class="calibre1">　　在BNRDrawView.m中实现longPress:，代码如下：</p>

  <p class="calibre1"><span class="calibre10">　　- （void）longPress:（UIGestureRecognizer *）gr</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　if （gr.state == UIGestureRecognizerStateBegan） {</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　CGPoint point = [gr locationInView:self];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.selectedLine = [self lineAtPoint:point];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　if （self.selectedLine） {</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self.linesInProgress removeAllObjects];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　} else if （gr.state == UIGestureRecognizerStateEnded） {</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.selectedLine = nil;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self setNeedsDisplay];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1">　　构建并运行应用。画一根线条，按住线条不放。TouchTracker应该会用绿色重画这根线条。</p>

  <p class="calibre1"><br class="calibre2"/></p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
