<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">8.5 代码片段库</h2>

  <p class="calibre1">　　读者可能已经注意到，如果在某个Objective-C的实现文件中输入init，Xcode就会自动列出一组备选项，其中包括init方法。选择后，Xcode就会在当前位置加入一段init方法的默认实现代码。</p>

  <p class="calibre1">　　Xcode自动加入的这段代码源自代码片段库（code snippet library）。打开工具区域，点击库面板选择条（library selector）中的图标就可以打开代码片段库面板（见图8-13）。此外，也可以使用快捷键Command-Control-Option-2，直接打开工具区域和代码片段库面板（替换快捷键中的数字，可以打开其他的库面板）。</p>

  <p class="calibre7"><img alt="tu8-13" src="../Images/image00486.jpeg" class="calibre8"/></p>

  <p class="calibre7">图8-13 代码片段库面板</p>

  <p class="calibre1">　　库面板会列出很多代码片段（见图8-13）。单击其中的一个，然后鼠标稍作悬停，Xcode就会弹出设置窗口并显示相应代码片段的详细信息。单击窗口中的Edit按钮（见图8-14）。</p>

  <p class="calibre7"><img alt="tu8-14" src="../Images/image00487.jpeg" class="calibre8"/></p>

  <p class="calibre7">图8-14 代码片段编辑窗口</p>

  <p class="calibre1">　　通过窗口中的Completion Shortcut输入框，可以查看或修改代码片段的触发字符串（在源代码文件中输入该字符串后，会触发Xcode自动加入相应的代码片段）。由图8-14所显示的编辑窗口可知：只有在Objective-C代码中（Language是Objective-C）并且是在类的实现部分（Completion Scopes是Class Implementation）输入init，Xcode才会自动输入init方法的代码片段。</p>

  <p class="calibre1">　　在代码片段库中，虽然Xcode自带的代码片段是只读的，不能编辑，但是读者可创建自定义的代码片段。找到BNRItemsViewController.m中的tableView:numberOfRowsInSection:，选中整个方法，代码如下：</p>

  <p class="calibre1">　　- (NSInteger)tableView:(UITableView *)tableView</p>

  <p class="calibre1">　　numberOfRowsInSection:(NSInteger)section</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　return [[[BNRItemStore sharedStore] allItems] count];</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　将选中的代码段拖曳至代码片段库，Xcode会将这段代码加入代码片段库并弹出编辑窗口，以便读者能够做进一步的设置。</p>

  <p class="calibre1">　　新加入的代码片段有一个缺陷：返回语句是针对Homepwner应用编写的，两者耦合在了一起。如果返回值是某种代码补全占位符（code completion placeholder），就可以很容易地在该位置输入代码。这样，当开发其他应用时，也能很方便地使用这段代码片断。在编辑窗口中，将之前的代码片段改为以下内容:</p>

  <p class="calibre1">　　- (NSInteger)tableView:(UITableView *)tableView</p>

  <p class="calibre1">　　numberOfRowsInSection:(NSInteger)section</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　return &lt;<span class="calibre10">#number of rows#</span>&gt;;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　然后根据图8-15填写编辑窗口中的其他输入框，最后单击Done按钮。</p>

  <p class="calibre7"><img alt="tu8-15" src="../Images/image00488.jpeg" class="calibre8"/></p>

  <p class="calibre7">图8-15 创建新的代码片段</p>

  <p class="calibre1">　　打开BNRItemsViewController.m，输入tablerows，Xcode会提示可以自动加入之前新增加的那个代码片段。回车后，Xcode会自动加入代码并选中number of rows占位符。（如果有多个占位符，可以使用快捷键Control-/跳到下一个占位符。）</p>

  <p class="calibre1">　　因为之前已经定义了tableView:numberOfRowsInSection:，所以请读者删除这段Xcode自动加入的代码。</p>

  <p class="calibre1"><br class="calibre2"/></p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
