<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">1.8 大功告成</h2>

  <p class="calibre1">　　现在读者已经完成了视图对象和控制器对象的创建、设置和关联，也在模型对象中存储了问题和答案。剩下的两项工作是：</p>

  <p class="calibre1">　　•在BNRQuizViewController中实现showQuestion:和showAnswer:动作方法。</p>

  <p class="calibre1">　　•在BNRAppDelegate中创建和显示BNRQuizViewController对象。</p>

  <p class="calibre1">实现动作方法</p>

  <p class="calibre1">　　在BNRQuizViewController.m文件中为showQuestion:和showAnswer:添加以下代码：</p>

  <p class="calibre1">　　...</p>

  <p class="calibre1">　　// 返回新对象的地址</p>

  <p class="calibre1">　　return self;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　- (IBAction)showQuestion:(id)sender</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1"><span class="calibre10">　　// 进入下一个问题</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.currentQuestionIndex++;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 是否已经回答完了所有问题？</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　if (self.currentQuestionIndex == [self.questions count]) {</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 回到第一个问题</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.currentQuestionIndex = 0;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 根据正在回答的问题序号从数组中取出问题字符串</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSString *question = self.questions[self.currentQuestionIndex];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 将问题字符串显示在标签上</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.questionLabel.text = question;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 重置答案字符串</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.answerLabel.text = @"???";</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　- (IBAction)showAnswer:(id)sender</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 当前问题的答案是什么？</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSString *answer = self.answers[self.currentQuestionIndex];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　// 在答案标签上显示相应的答案</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.answerLabel.text = answer;</span><br class="calibre2"/></p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　@end</p>

  <p class="calibre1"><br class="calibre2"/></p>

  <h3 class="sigil_not_in_toc">在屏幕上显示视图控制器</h3>

  <p class="calibre1">　　如果现在运行Quiz应用，读者将只能看到一个空白的屏幕，无法看到在BNRQuizViewController.xib文件中创建的用户界面。为了在屏幕上显示用户界面，必须将视图控制器和应用中的另一个控制器关联——BNRAppDelegate。</p>

  <p class="calibre1">　　使用Xcode开发iOS应用时，所有应用模板都会自动帮读者创建一个应用程序委托（app delegate）。应用程序委托是每一个iOS应用都必须具备的启动入口。</p>

  <p class="calibre1">　　应用程序委托负责管理应用的UIWindow对象。UIWindow对象表示应用唯一的主窗口。为了在屏幕上显示BNRQuizViewController，需要将它设置为UIWindow对象的根视图控制器（root view controller）。</p>

  <p class="calibre1">　　ios应用启动完毕后，为了向用户显示界面，系统会做一些额外工作。在用户看到应用界面之前，应用程序委托会收到一条消息：application:didFinishLaunchingWithOptions:，可以在这条消息中添加应用的初始化代码。初始化代码通常用来确保在用户看到界面时，应用已经处于正确的设置。</p>

  <p class="calibre1">　　在项目导航面板中选择BNRAppDelegate.m文件。在application:didFinish- LaunchingWithOptions:方法中创建BNRQuizViewController对象，并将它设置为UIWindow对象的根视图控制器。请读者添加以下代码：</p>

  <p class="calibre1">　　#import "BNRAppDelegate.h"</p>

  <p class="calibre1"><span class="calibre10">　　#import "BNRQuizViewController.h"</span><br class="calibre2"/></p>

  <p class="calibre1">　　- (BOOL)application:(UIApplication *)application</p>

  <p class="calibre1">　　didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　self.window = [[UIWindow alloc] initWithFrame:</p>

  <p class="calibre1">　　[[UIScreen mainScreen] bounds]];</p>

  <p class="calibre1">　　// 在这里添加应用启动后的初始化代码</p>

  <p class="calibre1"><span class="calibre10">　　BNRQuizViewController *quizVC = [[BNRQuizViewController alloc] init];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　self.window.rootViewController = quizVC;</span><br class="calibre2"/></p>

  <p class="calibre1">　　self.window.backgroundColor = [UIColor whiteColor];</p>

  <p class="calibre1">　　[self.window makeKeyAndVisible];</p>

  <p class="calibre1">　　return YES;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　现在，应用启动完毕后会创建BNRQuizViewController对象，并通过init方法初始化该对象，加载由BNRQuizViewController.xib文件编译而来的NIB文件（init方法是通过initWithNibName:bundle:方法加载NIB文件的，本书6.4节会介绍此过程），然后将它设置为UIWindow对象的根视图控制器。</p>

  <p class="calibre1">　　Quiz应用已经全部开发好了，读者可以体验一下自己开发的应用了。</p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
