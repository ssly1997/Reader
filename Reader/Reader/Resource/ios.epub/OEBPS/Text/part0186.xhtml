<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
  <h2 class="calibre9">20.4 确定用户首选字体大小</h2>

  <p class="calibre1">　　接下来在BNRItemsViewController中使用动态字体，为此需要做出两个方面的修改：根据用户首选字体动态改变UITableView的行高；与BNRDetailViewController类似，修改BNRItemCell，动态改变contentView中文本控件的文字大小。</p>

  <p class="calibre1">　　首先修改UITableView的行高。如果用户选取了较大的字体，那么行高也要相应增加，避免文字过于拥挤。通过UIApplication单例的preferredContentSizeCategory属性就可以确定当前用户首选字体大小，该属性返回表示字体大小的字符串常量，以下是所有字体大小常量：</p>

  <p class="calibre1">　　• UIContentSizeCategoryExtraSmall</p>

  <p class="calibre1">　　• UIContentSizeCategorySmall</p>

  <p class="calibre1">　　• UIContentSizeCategoryMedium</p>

  <p class="calibre1">　　• UIContentSizeCategoryLarge （默认值）</p>

  <p class="calibre1">　　• UIContentSizeCategoryExtraLarge</p>

  <p class="calibre1">　　• UIContentSizeCategoryExtraExtraLarge</p>

  <p class="calibre1">　　• UIContentSizeCategoryExtraExtraExtraLarge</p>

  <p class="calibre1">　　打开BNRItemsViewController.m，创建一个方法，根据用户首选字体大小修改UITableView的行高，然后在viewWillAppear:中调用该方法，代码如下：</p>

  <p class="calibre1">　　- （void）viewWillAppear:（BOOL）animated</p>

  <p class="calibre1">　　{</p>

  <p class="calibre1">　　[super viewWillAppear:animated];</p>

  <p class="calibre1">　　<del class="calibre11"><span class="calibre10">[self.tableView reloadData];</span></del></p>

  <p class="calibre1"><span class="calibre10">　　[self updateTableViewForDynamicTypeSize];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　- （void）updateTableViewForDynamicTypeSize</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　static NSDictionary *cellHeightDictionary;</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　if （！cellHeightDictionary） {</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　cellHeightDictionary = @{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategoryExtraSmall : @44,</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategorySmall : @44,</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategoryMedium : @44,</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategoryLarge : @44,</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategoryExtraLarge : @55,</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategoryExtraExtraLarge : @65,</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　UIContentSizeCategoryExtraExtraExtraLarge : @75 };</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSString *userSize =</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[[UIApplication sharedApplication] preferredContentSizeCategory];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSNumber *cellHeight = cellHeightDictionary[userSize];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self.tableView setRowHeight:cellHeight.floatValue];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[self.tableView reloadData];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1">　　构建并运行应用，首先在设置应用中修改用户首选字体，然后重新启动应用，可以发现，UITableView的行高会根据首选字体大小自动调整。（如果没有重新启动应用而是直接返回应用，就需要先进入BNRDetailViewController，再返回BNRItemsViewController，以便BNRItemsViewController可以收到viewWillAppear:消息。）</p>

  <p class="calibre1">　　与BNRDetailViewController相同，BNRItemsViewController也需要注册为UIContentSizeCategoryDidChangeNotification的观察者，观察并响应用户首选字体的改变。</p>

  <p class="calibre1">　　在BNRItemsViewController.m的init方法中将BNRItemsViewController注册为UIContentSizeCategoryDidChangeNotification的观察者，然后在dealloc中移除观察者。注意，响应该通知的方法是刚才实现的updateTableViewForDynamicTypeSize。</p>

  <p class="calibre1">　　self.navigationItem.rightBarButtonItem = bbi;</p>

  <p class="calibre1">　　self.navigationItem.leftBarButtonItem = [self editButtonItem];</p>

  <p class="calibre1"><span class="calibre10">　　NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[nc addObserver:self</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　selector:@selector（updateTableViewForDynamicTypeSize）</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　name:UIContentSizeCategoryDidChangeNotification</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　object:nil];</span><br class="calibre2"/></p>

  <p class="calibre1">　　}</p>

  <p class="calibre1">　　return self;</p>

  <p class="calibre1">　　}</p>

  <p class="calibre1"><span class="calibre10">　　- （void）dealloc</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　{</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　[nc removeObserver:self];</span><br class="calibre2"/></p>

  <p class="calibre1"><span class="calibre10">　　}</span><br class="calibre2"/></p>

  <p class="calibre1">　　构建并运行应用，这次一旦修改了用户首选字体，UITableView就会立刻根据首选字体大小改变行高。</p>

  <p class="calibre1"><br class="calibre2"/></p>
<div class="calibre5">本书由「<a href="https://epubw.com" class="calibre6">ePUBw.COM</a>」整理，<a href="https://epubw.com" class="calibre6">ePUBw.COM</a> 提供最新最全的优质电子书下载！！！</div></body></html>
